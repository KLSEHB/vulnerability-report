webchess v1.0 (https://sourceforge.net/projects/webchess) was discovered to contain a SQL injection vulnerability(CVE-2023-39851) via the $playerID parameter at mainmenu.php.

390.	   if (is_numeric($_POST['txtReload']))
391.	   {
392.	    if (intval($_POST['txtReload']) >= $CFG_MINAUTORELOAD)
393.	     $tmpQuery = "UPDATE " . $CFG_TABLE[preferences] . " SET value = ".$_POST['txtReload']." WHERE playerID = ".$_SESSION['playerID']." AND preference = 'autoreload'";
394.	    else
395.	     $tmpQuery = "UPDATE " . $CFG_TABLE[preferences] . " SET value = ".$CFG_MINAUTORELOAD." WHERE playerID = ".$_SESSION['playerID']." AND preference = 'autoreload'";
396.	
397.	    mysql_query($tmpQuery);
398.	   }

In lines 393 and 395 of the code, the $_SESSION['playerID'] value is directly integrated into an SQL statement, and these two SQL statements are identical. The conditional logic determines the value passed for modifying the operation.
Given the absence of any filtering or validation on $_SESSION['playerID'], this introduces a potential data loss vulnerability. 
For instance, if a user inputs a value of 1 through POST and inserts 1 or 1=1 # into the session, the executed SQL statement will read: UPDATE preferences SET value = 1 WHERE playerID = 1 or 1=1 # AND preference = 'autoreload'. 
Consequently, all value entries in the preferences table would be altered to 1.
Moreover, this vulnerability extends to the possibility of triggering a database shutdown. 
Should a user store 1; system shutdown;# in a session, the ensuing SQL statement would be: UPDATE preferences SET value = 1 WHERE playerID = 1; system shutdown;# AND preference = 'autoreload'.
This sequence would lead to the database shutting down after the execution of the update statement.
